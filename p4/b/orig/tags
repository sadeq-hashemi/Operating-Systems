%.asm	Makefile	/^%.asm: %.o$/
%.sym	Makefile	/^%.sym: %.o$/
.DEFAULT	Makefile	/^.DEFAULT:$/
.DELETE_ON_ERROR	Makefile	/^.DELETE_ON_ERROR:$/
.PHONY	Makefile	/^.PHONY: all$/
.PHONY	Makefile	/^.PHONY: clean distclean run depend qemu qemu-nox q/
.bochsrc	Makefile	/^.bochsrc: tools\/dot-bochsrc$/
.gdbinit	Makefile	/^.gdbinit: tools\/dot-gdbinit$/
AS	Makefile	/^AS := gcc$/
ASFLAGS +	Makefile	/^ASFLAGS += -ggdb # produce debugging information f/
CC	Makefile	/^CC = gcc$/
CFLAGS +	Makefile	/^CFLAGS += -Wall$/
CFLAGS +	Makefile	/^CFLAGS += -Werror$/
CFLAGS +	Makefile	/^CFLAGS += -ggdb$/
CLEAN	Makefile	/^CLEAN := $(KERNEL_CLEAN) $(USER_CLEAN) $(TOOLS_CLE/
CPP	Makefile	/^CPP := cpp$/
CPUS	Makefile	/^CPUS := 1$/
DEPS	Makefile	/^DEPS := $(KERNEL_DEPS) $(USER_DEPS) $(TOOLS_DEPS)$/
GDBPORT	Makefile	/^GDBPORT := $(shell expr `id -u` % 5000 + 25000)$/
LD	Makefile	/^LD := ld$/
OBJCOPY	Makefile	/^OBJCOPY := objcopy$/
OBJDUMP	Makefile	/^OBJDUMP := objdump$/
QEMU	Makefile	/^QEMU := $(shell if which qemu 1> \/dev\/null 2> \/dev/
QEMUGDB	Makefile	/^QEMUGDB := $(shell if $(QEMU) -help | grep -q '^-g/
QEMUOPTS	Makefile	/^QEMUOPTS := -drive file=fs.img,index=1,media=disk,/
USER_BINS	Makefile	/^USER_BINS := $(notdir $(USER_PROGS))$/
all	Makefile	/^all: xv6.img fs.img$/
bochs	Makefile	/^bochs: fs.img xv6.img .bochsrc$/
clean	Makefile	/^clean:$/
depend	Makefile	/^depend: $(DEPS)$/
dist	Makefile	/^dist: clean$/
fs	Makefile	/^fs:$/
fs.img	Makefile	/^fs.img: tools\/mkfs fs\/README $(addprefix fs\/,$(USE/
fs/%	Makefile	/^fs\/%: user\/bin\/% | fs$/
fs/README	Makefile	/^fs\/README: README | fs$/
qemu	Makefile	/^qemu: fs.img xv6.img$/
qemu-gdb	Makefile	/^qemu-gdb: fs.img xv6.img .gdbinit$/
qemu-nox	Makefile	/^qemu-nox: fs.img xv6.img$/
qemu-nox-gdb	Makefile	/^qemu-nox-gdb: fs.img xv6.img .gdbinit$/
run	Makefile	/^run: qemu$/
v6	README	2
